"""–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è - —Ä–æ–ª—å-–ø–ª–µ–π –≤–µ—Ä—Å–∏—è."""

import logging
import sys
import platform

# –í–ê–ñ–ù–û: WindowsProactorEventLoopPolicy —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¢–û–õ–¨–ö–û –ó–î–ï–°–¨!
if platform.system() == 'Windows':
    import asyncio
    asyncio.set_event_loop_policy(asyncio.WindowsProactorEventLoopPolicy())

from config.logging_config import setup_logging
from config.settings import load_config
from core.application import RoleplayTelegramBotApplication  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ–ª—å-–ø–ª–µ–π –≤–µ—Ä—Å–∏—é

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = load_config()
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        setup_logging(config.log_level, config.debug)
        
        logging.info("üé≠ –ó–∞–ø—É—Å–∫ —Ä–æ–ª—å-–ø–ª–µ–π Telegram –±–æ—Ç–∞...")
        logging.info(f"üñ•Ô∏è –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {platform.system()}")
        logging.info(f"üêç Python: {platform.python_version()}")
        
        if platform.system() == 'Windows':
            logging.info("ü™ü –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ Windows Event Loop Policy")
        
        logging.info("‚ö†Ô∏è –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        logging.info("üé≠ –†–µ–∂–∏–º: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–æ–ª—å-–ø–ª–µ–π —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        
        # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–æ–ª—å-–ø–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        app = RoleplayTelegramBotApplication(config)
        app.run()
        
    except KeyboardInterrupt:
        logging.info("üëã –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (Ctrl+C)")
    except Exception as e:
        logging.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}", exc_info=True)
        sys.exit(1)

if __name__ == "__main__":
    main()