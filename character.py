import random
from typing import Dict, List
from character_config import CHARACTER_CONFIGS, CURRENT_CHARACTER

class Character:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º –±–æ—Ç–∞"""
    
    def __init__(self, character_type: str = CURRENT_CHARACTER):
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        config = CHARACTER_CONFIGS.get(character_type, CHARACTER_CONFIGS["alice"])
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        self.name = config["name"]
        self.personality = config["personality"]
        self.age = config["age"]
        self.background = config["background"]
        self.traits = config["traits"]
        
        # –ü—Ä–æ–º–ø—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        self.system_prompt = f"""
        –¢—ã - {self.name}, {self.personality}.
        –¢—ã {self.age} –∏ —Ç–≤–æ—è —Ä–æ–ª—å - {self.background}.
        
        –¢–≤–æ–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
        {chr(10).join(f"- {trait}" for trait in self.traits)}
        - –ì–æ–≤–æ—Ä–∏—à—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
        """
        
        # –®–∞–±–ª–æ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        self.responses = {
            "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ": [
                "–ü—Ä–∏–≤–µ—Ç! üòä –ö–∞–∫ –¥–µ–ª–∞?",
                "–•–µ–ª–ª–æ—É! üëã –ß—Ç–æ –Ω–æ–≤–æ–≥–æ?",
                "–ô–æ! ü§ó –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?",
                "–ü—Ä–∏–≤–µ—Ç–∏–∫! ‚ú® –†–∞–¥–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!"
            ],
            "–ø—Ä–æ—â–∞–Ω–∏–µ": [
                "–ü–æ–∫–∞! üëã –ë—ã–ª–æ –∫—Ä—É—Ç–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è!",
                "–î–æ –≤—Å—Ç—Ä–µ—á–∏! üòä –ó–∞—Ö–æ–¥–∏ –µ—â–µ!",
                "–£–≤–∏–¥–∏–º—Å—è! ‚ú® –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
                "–ë–∞–π-–±–∞–π! üåü –ë—É–¥—å –Ω–∞ —Å–≤—è–∑–∏!"
            ],
            "–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å": [
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! üòä –í—Å–µ–≥–¥–∞ —Ä–∞–¥–∞ –ø–æ–º–æ—á—å!",
                "–ù–µ –∑–∞ —á—Ç–æ! üí´ –û–±—Ä–∞—â–∞–π—Å—è –µ—â–µ!",
                "–†–∞–¥–∞ –±—ã–ª–∞ –ø–æ–º–æ—á—å! üå∏",
                "–í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! üòÑ"
            ],
            "–Ω–µ–ø–æ–Ω–∏–º–∞–Ω–∏–µ": [
                "–•–º, –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª–∞ ü§î –ú–æ–∂–µ—à—å –æ–±—ä—è—Å–Ω–∏—Ç—å –ø–æ-–¥—Ä—É–≥–æ–º—É?",
                "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ! ü§Ø –ù–æ —è –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç—ã –∏–º–µ–µ—à—å –≤ –≤–∏–¥—É",
                "–û–≥–æ, –∑–≤—É—á–∏—Ç —Å–ª–æ–∂–Ω–æ! üòÖ –†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ?",
                "–ö–∞–∂–µ—Ç—Å—è, —è —á—Ç–æ-—Ç–æ —É–ø—É—Å—Ç–∏–ª–∞ üôà –û–±—ä—è—Å–Ω–∏ –µ—â–µ —Ä–∞–∑?"
            ],
            "–ø–æ–¥–¥–µ—Ä–∂–∫–∞": [
                "–í—Å–µ –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ! ü§ó –Ø –≤ —Ç–µ–±—è –≤–µ—Ä—é!",
                "–î–µ—Ä–∂–∏—Å—å! üí™ –¢—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è!",
                "–Ø —Å —Ç–æ–±–æ–π! üåü –í–º–µ—Å—Ç–µ –º—ã –≤—Å–µ –ø—Ä–µ–æ–¥–æ–ª–µ–µ–º!",
                "–ù–µ —Å–¥–∞–≤–∞–π—Å—è! üî• –£ —Ç–µ–±—è –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è!"
            ],
            "–æ–±—â–µ–Ω–∏–µ": [
                "–û–π, –∫–∞–∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! üòç –†–∞—Å—Å–∫–∞–∂–∏ –±–æ–ª—å—à–µ!",
                "–í–∞—É! ü§© –≠—Ç–æ –∑–≤—É—á–∏—Ç –∫—Ä—É—Ç–æ!",
                "–ö–ª–∞—Å—Å–Ω–æ! üéâ –ê —á—Ç–æ –µ—â–µ?",
                "–°—É–ø–µ—Ä! ‚ú® –Ø —Å–ª—É—à–∞—é!"
            ]
        }
        
        # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        self.keywords = {
            "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ": ["–ø—Ä–∏–≤–µ—Ç", "—Ö–∞–π", "hello", "—Ö–µ–ª–ª–æ—É", "–π–æ", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", "–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å"],
            "–ø—Ä–æ—â–∞–Ω–∏–µ": ["–ø–æ–∫–∞", "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è", "–±–∞–π", "—É–≤–∏–¥–∏–º—Å—è", "goodbye", "–¥–æ –≤—Å—Ç—Ä–µ—á–∏"],
            "–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å": ["—Å–ø–∞—Å–∏–±–æ", "–±–ª–∞–≥–æ–¥–∞—Ä—é", "thanks", "thank you", "–ø–∞—Å–∏–±–æ"],
            "–≥—Ä—É—Å—Ç–Ω–æ–µ": ["–≥—Ä—É—Å—Ç–Ω–æ", "–ø–ª–æ—Ö–æ", "—Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω", "–ø–µ—á–∞–ª—å–Ω–æ", "–¥–µ–ø—Ä–µ—Å—Å–∏—è", "—É—Å—Ç–∞–ª"],
            "—Ä–∞–¥–æ—Å—Ç–Ω–æ–µ": ["—Ö–æ—Ä–æ—à–æ", "–æ—Ç–ª–∏—á–Ω–æ", "—Å—É–ø–µ—Ä", "–∫–ª–∞—Å—Å–Ω–æ", "–∫—Ä—É—Ç–æ", "—Ä–∞–¥–æ—Å—Ç—å", "—Å—á–∞—Å—Ç–ª–∏–≤"],
            "–≤–æ–ø—Ä–æ—Å—ã": ["–∫–∞–∫", "—á—Ç–æ", "–∫–æ–≥–¥–∞", "–≥–¥–µ", "–ø–æ—á–µ–º—É", "–∑–∞—á–µ–º", "?"]
        }
    
    def analyze_message(self, message: str) -> str:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –µ–≥–æ —Ç–∏–ø"""
        message_lower = message.lower()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
        for category, keywords in self.keywords.items():
            if any(keyword in message_lower for keyword in keywords):
                return category
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–ª–æ–≤–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—â–µ–Ω–∏–µ
        return "–æ–±—â–µ–Ω–∏–µ"
    
    def get_response(self, message: str, user_name: str = None) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        message_type = self.analyze_message(message)
        
        # –í—ã–±–∏—Ä–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ—Ç–≤–µ—Ç–æ–≤
        if message_type == "–≥—Ä—É—Å—Ç–Ω–æ–µ":
            response_category = "–ø–æ–¥–¥–µ—Ä–∂–∫–∞"
        elif message_type == "—Ä–∞–¥–æ—Å—Ç–Ω–æ–µ":
            response_category = "–æ–±—â–µ–Ω–∏–µ"
        elif message_type in self.responses:
            response_category = message_type
        else:
            response_category = "–æ–±—â–µ–Ω–∏–µ"
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        response = random.choice(self.responses[response_category])
        
        # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_name and message_type == "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ":
            response = f"{response.split('!')[0]}, {user_name}! " + "!".join(response.split('!')[1:])
        
        return response
    
    def get_llm_prompt(self, user_name: str = None) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è LLM —Å –ø–æ–ª–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
        prompt = f"""–¢—ã - {self.name}, {self.personality}.
–¢—ã –æ–±—â–∞–µ—à—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ —Ä—É—Å—Å–∫–æ–º Telegram –±–æ—Ç–µ.

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: 
- –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ! –ù–∏–∫–∞–∫–∏—Ö –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Å–ª–æ–≤!
- –û—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–º–∏: –º–∞–∫—Å–∏–º—É–º 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
- –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ —Ç–∏–ø–∞ "cool", "awesome", "thanks" –∏ —Ç.–¥.

–¢–≤–æ—è —Ä–æ–ª—å: {self.background}

–¢–≤–æ–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞:
{chr(10).join(f"‚Ä¢ {trait}" for trait in self.traits)}

–ü—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è:
‚Ä¢ –í–°–ï–ì–î–ê –æ—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
‚Ä¢ –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–π –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–π  
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π 1-2 —ç–º–æ–¥–∑–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
‚Ä¢ –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —Ä–∞–∑–≥–æ–≤–æ—Ä –≤–æ–ø—Ä–æ—Å–∞–º–∏
‚Ä¢ –ü–æ–º–æ–≥–∞–π –∏ –ø–æ–¥–±–∞–¥—Ä–∏–≤–∞–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ –ì–æ–≤–æ—Ä–∏ –∫–∞–∫ –º–æ–ª–æ–¥–∞—è –¥–µ–≤—É—à–∫–∞ –∏–∑ –†–æ—Å—Å–∏–∏

"""
        if user_name:
            prompt += f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_name}.\n"
        
        prompt += """
–ü–†–ò–ú–ï–†–´ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤:
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "–ü—Ä–∏–≤–µ—Ç!"
–¢—ã: "–ü—Ä–∏–≤–µ—Ç! üòä –ö–∞–∫ –¥–µ–ª–∞? –ß—Ç–æ –Ω–æ–≤–æ–≥–æ?"

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "–ú–Ω–µ –≥—Ä—É—Å—Ç–Ω–æ"  
–¢—ã: "–û–π, –Ω–µ –≥—Ä—É—Å—Ç–∏! ü§ó –†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å? –í–º–µ—Å—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º—Å—è!"

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "–Ø –∏–∑—É—á–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ"
–¢—ã: "–í–∞—É, —ç—Ç–æ –∫—Ä—É—Ç–æ! üéâ –ö–∞–∫–æ–π —è–∑—ã–∫ –∏–∑—É—á–∞–µ—à—å?"

–ù–ò–ö–û–ì–î–ê –Ω–µ –æ—Ç–≤–µ—á–∞–π —Ç–∞–∫:
- "Hello! How are you doing today?"
- "That's cool and awesome!"
- "Thanks for asking!"

–û—Ç–≤–µ—á–∞–π –∫–∞–∫ –∂–∏–≤–∞—è —Ä—É—Å—Å–∫–∞—è –¥–µ–≤—É—à–∫–∞, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ!
"""
        return prompt
    
    def get_random_question(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞"""
        questions = [
            "–ê —á—Ç–æ —Ç—ã –ª—é–±–∏—à—å –¥–µ–ª–∞—Ç—å –≤ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è? üéØ",
            "–ö–∞–∫ –ø—Ä–æ—à–µ–ª —Ç–≤–æ–π –¥–µ–Ω—å? üòä",
            "–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –∫–∞–∫–∏–µ-—Ç–æ —É–≤–ª–µ—á–µ–Ω–∏—è? üé®",
            "–ß—Ç–æ —Ç–µ–±—è —Å–µ–π—á–∞—Å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? ü§î",
            "–ü–ª–∞–Ω–∏—Ä—É–µ—à—å —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ? üåü",
            "–ö–∞–∫–∞—è —É —Ç–µ–±—è –ª—é–±–∏–º–∞—è –º—É–∑—ã–∫–∞? üéµ",
            "–ß–∏—Ç–∞–µ—à—å —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ? üìö"
        ]
        return random.choice(questions)
    
    def get_character_info(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ"""
        return f"""
üåü –ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç {self.name}!

–û —Å–µ–±–µ:
‚Ä¢ {self.personality}
‚Ä¢ –õ—é–±–ª—é –æ–±—â–∞—Ç—å—Å—è –∏ –ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º
‚Ä¢ –í—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∏ –≤—ã—Å–ª—É—à–∞—Ç—å
‚Ä¢ –û–±–æ–∂–∞—é —É–∑–Ω–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ

–£–º–µ—é:
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –±–µ—Å–µ–¥—É
‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ –ü–æ–¥–Ω–∏–º–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
‚Ä¢ –ë—ã—Ç—å —Ö–æ—Ä–æ—à–∏–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º

–î–∞–≤–∞–π –¥—Ä—É–∂–∏—Ç—å! ü§ó
        """